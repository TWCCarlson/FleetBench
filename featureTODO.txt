- Automatic Task generator
- Agent resource tracking
- Simulation definition menu
- Add alert that task is not completable
- Treeview pages (Agent, Task, Stats/Status)
- Dynamic text representing valid task/agent creation option
- Migrate .grid() col and row IDs to be dictionaried with weights
    Removing magic numbers
- Remove magic numbers in general
- Task treeview should have a visual cue for which node is pickup/dropoff
- Main canvas maybe needs numbering for nodes
- Add status and a corresponding image to agents and tasks in treeviews

The graph datastructure should probably contain as much information as possible
The redraw/validation loop should probably rely on the graph as much as possible, with exceptions for application state semaphores
    This should be decoupled from the functional code and called after every change

Informational Classes are then:
    mapData
    agentData
    taskData
    statisticsData

Functional element Classes are then:
    commandBar - file, etc
    toolBar - the left pane
    infoBox - top bar with highlight info and layer visibilities
    mainView - central pane with graph render
    contextView - right hand pane

Graph structure:
    node data holds almost everything
    <Node Name> : <Node Data>
    '(A, B)': {
        'pos': {X: A, Y: B},
        'type': <'Node type'>,
        'edgeDirs': {'N': <0/1>, 'W': <0/1>, 'S': <0/1>, 'E': <0/1>},
        'agent': <Agent Object>
        'task': <Task Object>
    }
    maybe include 'reservations': {AgentID: weight/how many turns/etc}